name: Build and push Boltz

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Tag for the image"
        required: false
        default: "latest"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: boltz

jobs:
  build-boltz:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set repository owner
        id: set_repo_owner_lower
        shell: bash
        run: |
          echo "REPOSITORY_OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      #      - name: Set up QEMU
      #        uses: docker/setup-qemu-action@v3
      #        with:
      #          platforms: arm64,amd64

      - name: Login to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.REPOSITORY_OWNER }}/${{ env.IMAGE_NAME }}
          flavor: latest=auto
          tags: type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          #platforms: arm64,amd64
          context: ./${{ env.IMAGE_NAME }}/python3.11-slim
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY_OWNER }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.image_tag }}
          build-args: BASE_IMAGE=python:3.11-slim
  #  build-boltz-cu118:
  #    #runs-on: ubuntu-latest
  #    runs-on: big-storage
  #    permissions:
  #      contents: read
  #      packages: write
  #    steps:
  #      - name: Checkout repository
  #        uses: actions/checkout@v4
  #
  #      - name: Set repository owner
  #        id: set_repo_owner_lower
  #        shell: bash
  #        run: |
  #          echo "REPOSITORY_OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
  #
  #      #      - name: Set up QEMU
  #      #        uses: docker/setup-qemu-action@v3
  #      #        with:
  #      #          platforms: arm64,amd64
  #
  #      - name: Login to the container registry
  #        uses: docker/login-action@v3
  #        with:
  #          registry: ${{ env.REGISTRY }}
  #          username: ${{ github.actor }}
  #          password: ${{ secrets.GITHUB_TOKEN }}
  #
  #      - name: Extract image metadata
  #        id: meta
  #        uses: docker/metadata-action@v4
  #        with:
  #          images: |
  #            ${{ env.REGISTRY }}/${{ env.REPOSITORY_OWNER }}/${{ env.IMAGE_NAME }}
  #          flavor: latest=auto
  #          tags: type=raw,value=latest,enable={{is_default_branch}}
  #
  #      - name: Set up Docker Buildx
  #        uses: docker/setup-buildx-action@v3
  #
  #      - name: Build and push Docker image
  #        uses: docker/build-push-action@v6
  #        with:
  #          push: true
  #          #platforms: arm64,amd64
  #          context: ./${{ env.IMAGE_NAME }}/11.8.0-cudnn8-runtime-ubuntu22.04
  #          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY_OWNER }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.image_tag }}-cu118
  #          build-args: BASE_IMAGE=nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04
  #  build-boltz-cu121:
  #    #runs-on: ubuntu-latest
  #    runs-on: big-storage
  #    permissions:
  #      contents: read
  #      packages: write
  #    steps:
  #      - name: Checkout repository
  #        uses: actions/checkout@v4
  #
  #      - name: Set repository owner
  #        id: set_repo_owner_lower
  #        shell: bash
  #        run: |
  #          echo "REPOSITORY_OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
  #
  #      #      - name: Set up QEMU
  #      #        uses: docker/setup-qemu-action@v3
  #      #        with:
  #      #          platforms: arm64,amd64
  #
  #      - name: Login to the container registry
  #        uses: docker/login-action@v3
  #        with:
  #          registry: ${{ env.REGISTRY }}
  #          username: ${{ github.actor }}
  #          password: ${{ secrets.GITHUB_TOKEN }}
  #
  #      - name: Extract image metadata
  #        id: meta
  #        uses: docker/metadata-action@v4
  #        with:
  #          images: |
  #            ${{ env.REGISTRY }}/${{ env.REPOSITORY_OWNER }}/${{ env.IMAGE_NAME }}
  #          flavor: latest=auto
  #          tags: type=raw,value=latest,enable={{is_default_branch}}
  #
  #      - name: Set up Docker Buildx
  #        uses: docker/setup-buildx-action@v3
  #
  #      - name: Build and push Docker image
  #        uses: docker/build-push-action@v6
  #        with:
  #          push: true
  #          #platforms: arm64,amd64
  #          context: ./${{ env.IMAGE_NAME }}/12.1.0-cudnn8-runtime-ubuntu22.04
  #          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY_OWNER }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.image_tag }}-cu121
  #          build-args: BASE_IMAGE=nvidia/cuda:12.1.0-cudnn8-runtime-ubuntu22.04
  build-boltz-cu124:
    #runs-on: ubuntu-latest
    runs-on: big-storage
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set repository owner
        id: set_repo_owner_lower
        shell: bash
        run: |
          echo "REPOSITORY_OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      #      - name: Set up QEMU
      #        uses: docker/setup-qemu-action@v3
      #        with:
      #          platforms: arm64,amd64

      - name: Login to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.REPOSITORY_OWNER }}/${{ env.IMAGE_NAME }}
          flavor: latest=auto
          tags: type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          #platforms: arm64,amd64
          context: ./${{ env.IMAGE_NAME }}/12.4.1-cudnn-runtime-ubuntu22.04
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY_OWNER }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.image_tag }}-cu124
          build-args: BASE_IMAGE=nvidia/cuda:12.4.1-cudnn-runtime-ubuntu22.04
